-- MySQL Script generated by MySQL Workbench
-- Tue Jul  7 13:12:24 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema HospitalTest
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema HospitalTest
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HospitalTest` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `HospitalTest` ;

SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS `HospitalTest`.`medical-staff`;
DROP TABLE IF EXISTS `HospitalTest`.`patients`;
DROP TABLE IF EXISTS `HospitalTest`.`roles`;
DROP TABLE IF EXISTS `HospitalTest`.`users`;
DROP TABLE IF EXISTS `HospitalTest`.`treatment`;
DROP TABLE IF EXISTS `HospitalTest`.`diagnosis`;
DROP TABLE IF EXISTS `HospitalTest`.`id-m2m-code`;
DROP TABLE IF EXISTS `HospitalTest`.`current-treatment`;
DROP TABLE IF EXISTS `HospitalTest`.`hospitalization`;
SET FOREIGN_KEY_CHECKS = 1;

-- -----------------------------------------------------
-- Table `HospitalTest`.`medical-staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`medical-staff` (
  `id` CHAR(36) NOT NULL,
  `specialty` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Primary key - UUID of the doctor or of the nurse (36 symbols);';


-- -----------------------------------------------------
-- Table `HospitalTest`.`patients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`patients` (
  `id` CHAR(36) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `birth_date` DATE NOT NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Primary key - UUID of the patient;';


-- -----------------------------------------------------
-- Table `HospitalTest`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`roles` (
  `id_role` INT NOT NULL,
  `name_role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_role`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalTest`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_medical_staff` CHAR(36) NULL,
  `id_patient` CHAR(36) NULL,
  `login` VARCHAR(20) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `role` INT NOT NULL,
  `user_status` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `ApplicationUsersMedicalStaffFk_idx` (`id_medical_staff` ASC),
  INDEX `UserPatientFK_idx` (`id_patient` ASC),
  UNIQUE INDEX `id_medical_staff_UNIQUE` (`id_medical_staff` ASC) ,
  UNIQUE INDEX `id_patient_UNIQUE` (`id_patient` ASC) ,
  INDEX `UsersRolesFK_idx` (`role` ASC) ,
  CONSTRAINT `UsersMedicalStaffFK`
    FOREIGN KEY (`id_medical_staff`)
    REFERENCES `HospitalTest`.`medical-staff` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UsersPatientFK`
    FOREIGN KEY (`id_patient`)
    REFERENCES `HospitalTest`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UsersRolesFK`
    FOREIGN KEY (`role`)
    REFERENCES `HospitalTest`.`roles` (`id_role`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table will store users, who has access to the application (from medical-staff or patients); \nThis table delivers with one \'super user\', who has the role 1 -  \'administrator\';\n\'User_status\' - boolean value ( is active = true);';


-- -----------------------------------------------------
-- Table `HospitalTest`.`treatment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`treatment` (
  `id_appointment` INT NOT NULL AUTO_INCREMENT,
  `id_patient` CHAR(36) NOT NULL,
  `treatment_type` VARCHAR(20) NOT NULL,
  `treatment_name` VARCHAR(255) NOT NULL,
  `id_assigned_by` CHAR(36) NOT NULL,
  `date_begin/holding` DATE NOT NULL,
  `date_finish` DATE NOT NULL,
  `consent` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_appointment`),
  INDEX `TreatmentMedicalStaffFK_idx` (`id_assigned_by` ASC) ,
  INDEX `TreatmentPatientsFK_idx` (`id_patient` ASC) ,
  CONSTRAINT `TreatmentMedicalStaffFK`
    FOREIGN KEY (`id_assigned_by`)
    REFERENCES `HospitalTest`.`medical-staff` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `TreatmentPatientsFK`
    FOREIGN KEY (`id_patient`)
    REFERENCES `HospitalTest`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table bounds tables \'medical-staff\' and \'patient\';\n\'treatment_type\'  - means general type of the treatment: surgical, conservative or procedures;\n\'treatment_name\' - means concrete procedure;\n\'consent\' - boolean value;\n\'date_begin/holding\' - the date of  holding of the operation/procedure or begining of the conservative treatment;\n\'date_finish\' - in case of one-time treatment will be the same with date_beginning/holding;\n\'consent\' - boolean true/false (if the patient is agree for this procedure).\n\n';


-- -----------------------------------------------------
-- Table `HospitalTest`.`diagnosis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`diagnosis` (
  `code` VARCHAR(10) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `bed_days` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
COMMENT = 'The primary key - is the code of the disease by ICD-10.\n \' Bed_days\' means average amount of days by this disease (indicated for the Primary disease, in other cases  NULL values are allowed);';


-- -----------------------------------------------------
-- Table `HospitalTest`.`id-m2m-code`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`id-m2m-code` (
  `id_patient` CHAR(36) NOT NULL,
  `code_diagnosis` VARCHAR(45) NOT NULL,
  `is_primary` TINYINT NOT NULL DEFAULT 0,
  `setting_date` DATE NOT NULL,
  INDEX `PatientM2MFK_idx` (`id_patient` ASC),
  INDEX `DiagnosisM2MFK_idx` (`code_diagnosis` ASC) ,
  CONSTRAINT `PatientsM2MFK`
    FOREIGN KEY (`id_patient`)
    REFERENCES `HospitalTest`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `DiagnosisM2MFK`
    FOREIGN KEY (`code_diagnosis`)
    REFERENCES `HospitalTest`.`diagnosis` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table bounds tables \'Patient\' and \'Diagnosis\'.\n\'id_patient\' - UUID of the patient;\n\'code_diagnosis\' - unique code of the disease by ICD-10;\n\'is_primary\' - \'true\' when this diagnosis is the main (primary). In the other case - NULL is allowed;\nOne patient may have several diagnosis, main of them has boolean \'true\'\nin the column \'Primary\' (NULL values are allowed in \'Primary\').';


-- -----------------------------------------------------
-- Table `HospitalTest`.`current-treatment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`current-treatment` (
  `id_procedure` INT NOT NULL AUTO_INCREMENT,
  `id_appointment` INT NOT NULL,
  `date` DATE NOT NULL,
  `id_performer` CHAR(36) NOT NULL,
  `status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_procedure`),
  INDEX `CurrentTreatmentTreatmentFK_idx` (`id_appointment` ASC) ,
  INDEX `CurrentTreatmentMedicalStaff_idx` (`id_performer` ASC) ,
  CONSTRAINT `CurrentTreatmentTreatmentFK`
    FOREIGN KEY (`id_appointment`)
    REFERENCES `HospitalTest`.`treatment` (`id_appointment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CurrentTreatmentMedicalStaff`
    FOREIGN KEY (`id_performer`)
    REFERENCES `HospitalTest`.`medical-staff` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '\'Id_appointment\' - FK to \'treatment\' (serial number of the appointment);\n\'Status\' means, if concrete procedure or the course of treatment \'in progress\' or \'completed\';';


-- -----------------------------------------------------
-- Table `HospitalTest`.`hospitalization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HospitalTest`.`hospitalization` (
  `id_history` INT NOT NULL AUTO_INCREMENT,
  `id_patient` CHAR(36) NOT NULL,
  `entry_date` DATE NOT NULL,
  `discharge_date` DATE NULL,
  PRIMARY KEY (`id_history`),
  INDEX `HospitalisationPatientsFK_idx` (`id_patient` ASC) ,
  CONSTRAINT `HospitalisationPatientsFK`
    FOREIGN KEY (`id_patient`)
    REFERENCES `HospitalTest`.`patients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `HospitalTest`.`medical-staff`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('4dc191b9-3477-423c-8493-cfa531bc2b0b', 'doctor', 'Андреев', 'Андрей', 'andreev@gmail.com');
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('6b076d07-87c7-4afb-8397-1b20ee624467', 'doctor', 'Давыдов', 'Давид', 'davydov@gmail.com');
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('67d9be8a-de60-41a1-bc13-dcdac87e4ffe', 'doctor', 'Кот', 'Лидия', 'cot@gmail.com');
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('06517d4f-c428-4aba-86da-482451b29c38', 'nurse', 'Лисовская', 'Алла', NULL);
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('b5b1c512-d975-4646-81ca-e0fdca2b6f40', 'nurse', 'Рудая', 'Екатерина', NULL);
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('a3434a9a-7cac-43a4-9671-4879b4737e86', 'nurse', 'Лазебных', 'Тамара', NULL);
INSERT INTO `HospitalTest`.`medical-staff` (`id`, `specialty`, `surname`, `name`, `email`) VALUES ('5ec28331-a666-47f1-9e4a-3110cd812fd7', 'nurse', 'Григорян', 'Карина', 'grigorjan@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`patients`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`patients` (`id`, `surname`, `name`, `birth_date`, `email`) VALUES ('e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'Смолянко', 'Виктор', '1985-04-01', 'smolyanko@gmail.com');
INSERT INTO `HospitalTest`.`patients` (`id`, `surname`, `name`, `birth_date`, `email`) VALUES ('2fdd8656-e742-47cb-af8a-2f68d414e3bf', 'Егорова ', 'Валентина', '1950-05-15', 'egorova@gmail.com');
INSERT INTO `HospitalTest`.`patients` (`id`, `surname`, `name`, `birth_date`, `email`) VALUES ('f5c6ece3-8131-4c5b-b055-ad683dac0526', 'Максимов', 'Мирон', '1948-12-03', 'maximov@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`roles`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`roles` (`id_role`, `name_role`) VALUES (1, 'администратор');
INSERT INTO `HospitalTest`.`roles` (`id_role`, `name_role`) VALUES (2, 'врач');
INSERT INTO `HospitalTest`.`roles` (`id_role`, `name_role`) VALUES (3, 'пациент');
INSERT INTO `HospitalTest`.`roles` (`id_role`, `name_role`) VALUES (4, 'медицинская сестра');

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;

INSERT INTO `HospitalTest`.`users` (`id`, `id_medical_staff`, `id_patient`, `login`, `password`, `role`, `user_status`) VALUES (2, '6b076d07-87c7-4afb-8397-1b20ee624467', NULL, 'germini', '$2a$12$TV1uLRAYwCFXWnTNkCIpW.ZW9dT/Qxrndw1TyX0DgKJUnDEUPlUFi', 2, true);
INSERT INTO `HospitalTest`.`users` (`id`, `id_medical_staff`, `id_patient`, `login`, `password`, `role`, `user_status`) VALUES (4, '4dc191b9-3477-423c-8493-cfa531bc2b0b', NULL, 'sagittarius', '$2a$12$7KezwXd5wfexCVHJ9RuXduMBK8FPMOpdaXaw.eU1dDMTy2H/PuguW', 2, true);
INSERT INTO `HospitalTest`.`users` (`id`, `id_medical_staff`, `id_patient`, `login`, `password`, `role`, `user_status`) VALUES (5, NULL, 'e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'alfa', '$2a$12$phEo4stRjZ8QBGb4RMisAObHdTGdfru.nQFqpxTfRp5Wx2JM2T6VK', 3, true);
INSERT INTO `HospitalTest`.`users` (`id`, `id_medical_staff`, `id_patient`, `login`, `password`, `role`, `user_status`) VALUES (6, NULL, '2fdd8656-e742-47cb-af8a-2f68d414e3bf', 'beta', '$2a$12$SgL7V6VVM/69fTaCmN0h5ewDSrq4U0e7Jxqxgco9w2pFDGVN3CuuO', 3, true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`treatment`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`treatment` (`id_appointment`, `id_patient`, `treatment_type`, `treatment_name`, `id_assigned_by`, `date_begin/holding`, `date_finish`, `consent`) VALUES (1, 'e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'surgical', 'Витрэктомия с введением ПФОС', '4dc191b9-3477-423c-8493-cfa531bc2b0b', '2019-07-24', '2019-07-24', true);
INSERT INTO `HospitalTest`.`treatment` (`id_appointment`, `id_patient`, `treatment_type`, `treatment_name`, `id_assigned_by`, `date_begin/holding`, `date_finish`, `consent`) VALUES (2, 'e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'conservative', 'Инстилляции Вигамокс 3 р/день', '4dc191b9-3477-423c-8493-cfa531bc2b0b', '2019-07-23', '2019-08-02', true);
INSERT INTO `HospitalTest`.`treatment` (`id_appointment`, `id_patient`, `treatment_type`, `treatment_name`, `id_assigned_by`, `date_begin/holding`, `date_finish`, `consent`) VALUES (3, '2fdd8656-e742-47cb-af8a-2f68d414e3bf', 'surgical', 'ФЭК с имплантацией ИОЛ', '6b076d07-87c7-4afb-8397-1b20ee624467', '2019-07-24', '2019-07-24', true);
INSERT INTO `HospitalTest`.`treatment` (`id_appointment`, `id_patient`, `treatment_type`, `treatment_name`, `id_assigned_by`, `date_begin/holding`, `date_finish`, `consent`) VALUES (4, 'f5c6ece3-8131-4c5b-b055-ad683dac0526', 'surgical', 'ФЭК с имплантацией ИОЛ', '6b076d07-87c7-4afb-8397-1b20ee624467', '2019-07-24', '2019-07-24', true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`diagnosis`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H26.20', 'катаракта', 3);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H40.21', 'глаукома', 7);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H33.0', 'отслойка сетчатки', 10);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H16.8', 'кератит', 9);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H43.81', 'деструкция стекловидного тела', 0);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H52.13', 'миопия и другие нарушения рефракции', 0);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H18.603', 'кератоконус', 12);
INSERT INTO `HospitalTest`.`diagnosis` (`code`, `name`, `bed_days`) VALUES ('H44.81', 'гемофтальм', 6);

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`id-m2m-code`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`id-m2m-code` (`id_patient`, `code_diagnosis`, `is_primary`, `setting_date`) VALUES ('e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'H33.0', true, '2019-07-23');
INSERT INTO `HospitalTest`.`id-m2m-code` (`id_patient`, `code_diagnosis`, `is_primary`, `setting_date`) VALUES ('e4a4baa0-25a5-4b60-9856-b55ec84d8c88', 'H52.13', false, '2019-07-23');
INSERT INTO `HospitalTest`.`id-m2m-code` (`id_patient`, `code_diagnosis`, `is_primary`, `setting_date`) VALUES ('2fdd8656-e742-47cb-af8a-2f68d414e3bf', 'H26.20', true, '2019-07-23');
INSERT INTO `HospitalTest`.`id-m2m-code` (`id_patient`, `code_diagnosis`, `is_primary`, `setting_date`) VALUES ('f5c6ece3-8131-4c5b-b055-ad683dac0526', 'H26.20', true, '2019-07-24');

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`current-treatment`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (1, 1, '2019-07-24', '4dc191b9-3477-423c-8493-cfa531bc2b0b', 'completed');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (2, 2, '2019-07-23', 'b5b1c512-d975-4646-81ca-e0fdca2b6f40', 'in progress');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (3, 2, '2019-07-24', 'b5b1c512-d975-4646-81ca-e0fdca2b6f40', 'in progress');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (4, 2, '2019-08-01', 'b5b1c512-d975-4646-81ca-e0fdca2b6f40', 'in progress');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (5, 2, '2019-08-02', 'b5b1c512-d975-4646-81ca-e0fdca2b6f40', 'completed');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (6, 3, '2019-07-24', '6b076d07-87c7-4afb-8397-1b20ee624467', 'completed');
INSERT INTO `HospitalTest`.`current-treatment` (`id_procedure`, `id_appointment`, `date`, `id_performer`, `status`) VALUES (7, 4, '2019-07-24', '6b076d07-87c7-4afb-8397-1b20ee624467', 'completed');

COMMIT;


-- -----------------------------------------------------
-- Data for table `HospitalTest`.`hospitalization`
-- -----------------------------------------------------
START TRANSACTION;
USE `HospitalTest`;
INSERT INTO `HospitalTest`.`hospitalization` (`id_history`, `id_patient`, `entry_date`, `discharge_date`) VALUES (1, 'f5c6ece3-8131-4c5b-b055-ad683dac0526', '2019-07-23', '2019-07-26');
INSERT INTO `HospitalTest`.`hospitalization` (`id_history`, `id_patient`, `entry_date`, `discharge_date`) VALUES (2, 'e4a4baa0-25a5-4b60-9856-b55ec84d8c88', '2019-07-23', '2019-08-02');
INSERT INTO `HospitalTest`.`hospitalization` (`id_history`, `id_patient`, `entry_date`, `discharge_date`) VALUES (3, '2fdd8656-e742-47cb-af8a-2f68d414e3bf', '2019-07-23', '2019-07-26');
INSERT INTO `HospitalTest`.`hospitalization` (`id_history`, `id_patient`, `entry_date`, `discharge_date`) VALUES (11, '2fdd8656-e742-47cb-af8a-2f68d414e3bf', '2019-09-10', '2019-09-15');

COMMIT;